// <auto-generated />
using System;
using Mecanica_Automotiva.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mecanica_Automotiva.Migrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20250619221256_inicio")]
    partial class inicio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Mecanica_Automotiva.Models.Agendar", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("char(36)");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time(6)");

                    b.Property<TimeOnly>("TempoDeServiço")
                        .HasColumnType("time(6)");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.HasIndex("ClienteId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosCliente.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Cpf")
                        .HasColumnType("int");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosCliente.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Cep")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosVeiculo.Marca", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosVeiculo.Modelo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosVeiculo.TipoVeiculo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("TipoVeiculos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Pecas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClassePecaID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Preco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ServicoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubClassePecaID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TipoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ClassePecaID");

                    b.HasIndex("ServicoId");

                    b.HasIndex("SubClassePecaID");

                    b.HasIndex("TipoId");

                    b.ToTable("Pecas");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Produtos.ClassePeca", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("ClassePecas");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Produtos.SubClassePeca", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClassePecaID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ClassePecaID");

                    b.ToTable("SubClassePecas");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Produtos.TipoPeca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClassePecaID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("SubClassePecaID")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ClassePecaID");

                    b.HasIndex("SubClassePecaID");

                    b.ToTable("TipoPeca");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Servico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AgendarID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeOnly>("Duracao")
                        .HasColumnType("time(6)");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("AgendarID");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MarcaID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ModeloID")
                        .HasColumnType("char(36)");

                    b.Property<int>("Nome")
                        .HasColumnType("int");

                    b.Property<Guid>("TipoID")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaID");

                    b.HasIndex("ModeloID");

                    b.HasIndex("TipoID");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Agendar", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.DadosCliente.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.DadosCliente.Cliente", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.DadosCliente.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Pecas", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.Produtos.ClassePeca", "ClassePeca")
                        .WithMany()
                        .HasForeignKey("ClassePecaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mecanica_Automotiva.Models.Servico", null)
                        .WithMany("Pecas")
                        .HasForeignKey("ServicoId");

                    b.HasOne("Mecanica_Automotiva.Models.Produtos.SubClassePeca", "SubClassePeca")
                        .WithMany()
                        .HasForeignKey("SubClassePecaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mecanica_Automotiva.Models.Produtos.TipoPeca", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassePeca");

                    b.Navigation("SubClassePeca");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Produtos.SubClassePeca", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.Produtos.ClassePeca", "ClassePeca")
                        .WithMany("SubClasses")
                        .HasForeignKey("ClassePecaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassePeca");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Produtos.TipoPeca", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.Produtos.ClassePeca", "ClassePeca")
                        .WithMany()
                        .HasForeignKey("ClassePecaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mecanica_Automotiva.Models.Produtos.SubClassePeca", "SubClassePeca")
                        .WithMany()
                        .HasForeignKey("SubClassePecaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassePeca");

                    b.Navigation("SubClassePeca");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Servico", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.Agendar", "Agendar")
                        .WithMany("Servicos")
                        .HasForeignKey("AgendarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agendar");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Veiculo", b =>
                {
                    b.HasOne("Mecanica_Automotiva.Models.DadosVeiculo.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mecanica_Automotiva.Models.DadosVeiculo.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mecanica_Automotiva.Models.DadosVeiculo.TipoVeiculo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Modelo");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Agendar", b =>
                {
                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Produtos.ClassePeca", b =>
                {
                    b.Navigation("SubClasses");
                });

            modelBuilder.Entity("Mecanica_Automotiva.Models.Servico", b =>
                {
                    b.Navigation("Pecas");
                });
#pragma warning restore 612, 618
        }
    }
}
